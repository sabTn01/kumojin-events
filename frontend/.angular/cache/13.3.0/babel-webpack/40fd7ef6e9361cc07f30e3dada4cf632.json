{"ast":null,"code":"import _asyncToGenerator from \"/Users/sbenhadj/Repositories/test/kumojin-events/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { KumojinEventListComponent } from './kumojin-event-list.component';\nimport { KumojinEventHttpService } from '../../../../foundation/mainstack/kumojin-events/services/kumojin-event-http.service';\nimport { KumojinEvent } from '../../../../foundation/mainstack/kumojin-events/models/kumojin-event';\nimport { of } from 'rxjs';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\ndescribe('KumojinEventListComponent', () => {\n  let component;\n  let fixture;\n  let eventListMock = new Array();\n  let eventMock1 = new KumojinEvent();\n  let eventMock2 = new KumojinEvent();\n  eventMock1 = {\n    guid: 'guid1',\n    displayName: 'name1',\n    description: 'description1',\n    startAt: new Date(2022, 1, 1, 0, 0, 0),\n    endAt: new Date(2022, 1, 1, 15, 0, 0),\n    countryAt: 'Mexico'\n  };\n  eventMock2 = {\n    guid: 'guid2',\n    displayName: 'name2',\n    description: 'description2',\n    startAt: new Date(2022, 1, 1, 0, 0, 0),\n    endAt: new Date(2022, 1, 1, 15, 0, 0),\n    countryAt: 'Spain'\n  };\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    eventListMock.push(eventMock1);\n    eventListMock.push(eventMock2);\n    const mockService = jasmine.createSpyObj('KumojinEventHttpService', {\n      list: of(eventListMock)\n    });\n    yield TestBed.configureTestingModule({\n      declarations: [KumojinEventListComponent],\n      imports: [HttpClientTestingModule],\n      providers: [{\n        provide: KumojinEventHttpService,\n        useValue: mockService\n      }]\n    }).compileComponents();\n    fixture = TestBed.createComponent(KumojinEventListComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  }));\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('ngOnInit, should deactivate loading', () => {\n    // Arrange\n    // Act\n    component.ngOnInit(); // Assert\n\n    expect(component.isLoading).toBeFalsy();\n  });\n  it('ngOnInit, should fetch a list of events', () => {\n    // Arrange\n    // Act\n    component.ngOnInit(); // Assert\n\n    expect(component.events.length).toEqual(2);\n    expect(component.isLoading).toBeFalsy();\n  });\n});","map":{"version":3,"sources":["/Users/sbenhadj/Repositories/test/kumojin-events/frontend/src/app/features/mainstack/kumojin-events/list/kumojin-event-list.component.spec.ts"],"names":["TestBed","KumojinEventListComponent","KumojinEventHttpService","KumojinEvent","of","HttpClientTestingModule","describe","component","fixture","eventListMock","Array","eventMock1","eventMock2","guid","displayName","description","startAt","Date","endAt","countryAt","beforeEach","push","mockService","jasmine","createSpyObj","list","configureTestingModule","declarations","imports","providers","provide","useValue","compileComponents","createComponent","componentInstance","detectChanges","it","expect","toBeTruthy","ngOnInit","isLoading","toBeFalsy","events","length","toEqual"],"mappings":"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","sourcesContent":["import { TestBed } from '@angular/core/testing';\nimport { KumojinEventListComponent } from './kumojin-event-list.component';\nimport { KumojinEventHttpService } from '../../../../foundation/mainstack/kumojin-events/services/kumojin-event-http.service';\nimport { KumojinEvent } from '../../../../foundation/mainstack/kumojin-events/models/kumojin-event';\nimport { of } from 'rxjs';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\ndescribe('KumojinEventListComponent', () => {\n    let component;\n    let fixture;\n    let eventListMock = new Array();\n    let eventMock1 = new KumojinEvent();\n    let eventMock2 = new KumojinEvent();\n    eventMock1 = {\n        guid: 'guid1',\n        displayName: 'name1',\n        description: 'description1',\n        startAt: new Date(2022, 1, 1, 0, 0, 0),\n        endAt: new Date(2022, 1, 1, 15, 0, 0),\n        countryAt: 'Mexico'\n    };\n    eventMock2 = {\n        guid: 'guid2',\n        displayName: 'name2',\n        description: 'description2',\n        startAt: new Date(2022, 1, 1, 0, 0, 0),\n        endAt: new Date(2022, 1, 1, 15, 0, 0),\n        countryAt: 'Spain'\n    };\n    beforeEach(async () => {\n        eventListMock.push(eventMock1);\n        eventListMock.push(eventMock2);\n        const mockService = jasmine.createSpyObj('KumojinEventHttpService', {\n            list: of(eventListMock)\n        });\n        await TestBed.configureTestingModule({\n            declarations: [KumojinEventListComponent],\n            imports: [HttpClientTestingModule],\n            providers: [{ provide: KumojinEventHttpService, useValue: mockService }],\n        })\n            .compileComponents();\n        fixture = TestBed.createComponent(KumojinEventListComponent);\n        component = fixture.componentInstance;\n        fixture.detectChanges();\n    });\n    it('should create', () => {\n        expect(component).toBeTruthy();\n    });\n    it('ngOnInit, should deactivate loading', () => {\n        // Arrange\n        // Act\n        component.ngOnInit();\n        // Assert\n        expect(component.isLoading).toBeFalsy();\n    });\n    it('ngOnInit, should fetch a list of events', () => {\n        // Arrange\n        // Act\n        component.ngOnInit();\n        // Assert\n        expect(component.events.length).toEqual(2);\n        expect(component.isLoading).toBeFalsy();\n    });\n});\n"]},"metadata":{},"sourceType":"module"}